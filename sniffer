#!/bin/bash
#
#       V1.4     09-2021
#       ufw deny modified
#	minor grammar changes
#

PATH="/home/ljcd/LABO/BASH/SNIFFER"
LIB_PATH="$PATH/LIB_SNIFFER"
# --- Common to all LIB functions
source ${LIB_PATH}/common.lib

# --- common functions for file manipulations
source ${LIB_PATH}/functions.files

# functions for UFW manipulation
source ${LIB_PATH}/functions.ufw

# --- common datetime manipulation functions
source ${LIB_PATH}/functions.time

# --- Config params
source ${PATH}/sniffer.CONFIG

# --- FUNCTIONS ---------------------------------------------

# --- MAIN --------------------------------------------------
bad_ips_counter="0"
is_ip_banned="${FALSE}"

for ip in $(_suspicious_ips_using_usr_pwd)
#for ip in $(find_suspicious_ips)
do
	echo "IP ${ip} to be analysed"
	# Is IP in whitelist? ---------------------------
	ip_to_ignore=$( exists_in_file "${ip}" "${file_whitelist_ips}" )
        if [[ ${ip_to_ignore} == ${TRUE} ]]
        then	# IP to be ignored. Next()
                echo -e "IP ${GREEN}${ip}${NC} in whitelist"
		continue
        fi

	# IP already banned? ----------------------------
	is_ip_banned=$( check_if_ip_already_banned "${ip}" )
	if [[ ${is_ip_banned} == ${TRUE} ]]
	then
		echo -e "Ip ${RED}${ip}${NC} already quarantined"
		continue
        fi

	# New suspicious IP -----------------------------
        attempts_f1=$(count_attempts_per_ip_in_file "${ip}" "${AUTH_LOG_FILE1}")
        attempts_f2=$(count_attempts_per_ip_in_file "${ip}" "${AUTH_LOG_FILE2}")
	let total_attempts_IP_x=attempts_f1+attempts_f2

	# usernames to file -----------------------------
	for user in $(find_users4ip "${ip}")
	do
		add2file "${user}" "${file_bad_boys}"
	done

	# Ban IP if num attempts > x -------------------- 
	if (( total_attempts_IP_x > ALLOWED_LOGIN_ATTEMPTS ))
	then
		echo -e "${total_attempts_IP_x} attempts for IP ${ip}! -> Threat!"
		let bad_ips_counter=bad_ips_counter+1
		ban_ip_for_SSH "${ip}"
		#ban_ip_to_ANY "${ip}"
		add2fileWhithDate "${ip}" "${file_banned_ips}"
	fi			
done

# --- Update last date analysed ---
cur_dt=$(/bin/date +"%Y-%m-%d %T")
epoch_dt_new=$(epochForLogFile)
update_cfg "${LABEL_PREV_DT}" "${epoch_dt_new}"

# --- Resume ---
if (( bad_ips_counter > 0 ))
then
        echo -e "${cur_dt} ${bad_ips_counter} IPs quarantined"
fi

# --- Remove expired IPs from     ------------------
#       firewall and control file
echo -e "Analyzing IPs to be permitted"
maintain_ip_ddbb        "${file_banned_ips}" \
                        "${file_banned_ips_expired}" \
                        "${MINS_EXPIRATION_RULE}"

# --- END ------------------------------------------
